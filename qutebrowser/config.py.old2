# Autogenerated config.py
#
# NOTE: This file has been manually cleaned and optimized.

# --- Global Settings ---
# Do NOT load settings configured via the graphical autoconfig.yml
config.load_autoconfig(False)

# Hide Window Border
config.set("window.hide_decoration", True)

# Set Editor to nvim (using Terminator as the terminal emulator)
config.set(
    "editor.command",
    ["terminator", "-x", "nvim", "{file}", "-c", "normal {line}G{column0}l"],
)

# Dark Mode and Color Scheme
c.colors.webpage.preferred_color_scheme = "dark"
c.colors.webpage.darkmode.enabled = True


# --- Ad-Blocking Configuration ---
# Enable ad-blocking globally and use the advanced 'both' method
c.content.blocking.enabled = True
c.content.blocking.method = "both"

# Standard ABP-style filter lists (uBlock Origin lists)
c.content.blocking.adblock.lists = [
    # Core Ad Blocking
    "https://ublockorigin.github.io/uAssets/filters/filters.txt",
    "https://ublockorigin.github.io/uAssets/thirdparties/easylist.txt",
    # Privacy and Tracking
    "https://ublockorigin.github.io/uAssets/filters/privacy.txt",
    "https://ublockorigin.github.io/uAssets/thirdparties/easyprivacy.txt",
    # Badware/Malware Protection
    "https://ublockorigin.github.io/uAssets/filters/badware.txt",
    "https://malware-filter.gitlab.io/urlhaus-filter/urlhaus-filter-ag-online.txt",
    # FIX: Loads the local filter to bypass anti-adblock detection (e.g., SpankBang)
    # "file:///home/lucky/.config/qutebrowser/adblock-fixes.txt",
]

# FIX: Whitelist the asset CDN (assets.sb-cd.com) to allow video player scripts to load
c.content.blocking.whitelist.append("https://assets.sb-cd.com/*")
c.content.blocking.whitelist.append("https://gemini.google.com/*")
c.content.blocking.whitelist.append("https://www.googletagmanager.com/*")
c.content.blocking.whitelist.append("https://play.google.com/*")
c.content.blocking.whitelist.append("www.google-analytics.com/*")
c.content.blocking.whitelist.append("www.google.com/*")
c.content.blocking.whitelist.append("https://maps.googleapis.com/*")
# --- MPV Bindings and External Commands ---
# Bind to the direct stream extraction userscript (the reliable method for anti-adblock sites)
config.bind(",v", "spawn --userscript mpv-direct-stream.sh", mode="normal")

# Basic keybinding to open the current URL in MPV (e.g., for YouTube)
config.bind("<Ctrl-m>", "spawn mpv {url}", mode="normal")

# Keybind to hint a link and open its URL in mpv
config.bind(";M", "hint links spawn mpv {hint-url}")

# --- qute-pass Bindings ---
wofi_invocation = " --dmenu-invocation wofi"
# Full Login (Username + Password)
config.bind("<z><l>", f"spawn --userscript qute-pass{wofi_invocation}", mode="normal")
# Username Only
config.bind(
    "<z><u><l>",
    f"spawn --userscript qute-pass --username-only{wofi_invocation}",
    mode="normal",
)
# Password Only
config.bind(
    "<z><p><l>",
    f"spawn --userscript qute-pass --password-only{wofi_invocation}",
    mode="normal",
)
# OTP Only
config.bind(
    "<z><o><l>",
    f"spawn --userscript qute-pass --otp-only{wofi_invocation}",
    mode="normal",
)


# --- Developer/Internal URL Overrides (Standard, Consolidated) ---
DEV_URLS = ["chrome-devtools://*", "devtools://*", "chrome://*/*", "qute://*/*"]

# Necessary overrides for internal/devtools pages to function
for url in DEV_URLS:
    config.set("content.cookies.accept", "all", url)
    config.set("content.images", True, url)
    config.set("content.javascript.enabled", True, url)


# --- Site-Specific User Agent Overrides ---
config.set(
    "content.headers.user_agent",
    "Mozilla/5.0 ({os_info}) AppleWebKit/{webkit_version} (KHTML, like Gecko) {upstream_browser_key}/{upstream_browser_version} Safari/{webkit_version}",
    "https://web.whatsapp.com/",
)
config.set(
    "content.headers.user_agent",
    "Mozilla/5.0 ({os_info}; rv:90.0) Gecko/20100101 Firefox/90.0",
    "https://accounts.google.com/*",
)
config.set(
    "content.headers.user_agent",
    "Mozilla/5.0 ({os_info}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99 Safari/537.36",
    "https://*.slack.com/*",
)
config.set("content.headers.accept_language", "", "https://matchmaker.krunker.io/*")
